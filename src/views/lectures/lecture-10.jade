doctype html
include ../includes/mixins

+page("Lecture 10 - Animations")
  +lecture-title-page("Animations", "Lecture 10")

  section
    h1 Lab Nine
    h2 Solution

  section
    h1 Animations

  section
    p AngularJS provides hooks for animations on common directives such as ngRepeat, ngSwitch, and ngView.

  section
    p Animation hooks are in place to trigger animations during the life cycle of provided directives.

  section
    p When they're triggered, they'll attempt to perform a CSS animation or JavaScript callback animation depending on which is defined.
    
  section
    p 
      | First, lets take a look at the documentation for 
      a(href="http://docs.angularjs.org/api/ngAnimate/service/$animate", target="_blank") $animate
    
  section
    p Now, lets take a look at the AngularJS source code for ngRepeat to see how it's hooked into the $animate service.
    br
    a(href="https://github.com/angular/angular.js/blob/master/src/ng/directive/ngRepeat.js#L327", target="_blank") src/ng/directive/ngRepeat.js#L327

  section
    h2 Using Animations

  section
    p Since Angular is designed to be modular, you'll first need to specify the ngAnimate module as a dependency.
    br
    .text-center
      pre.
        <code data-trim>
        angular.module('app', ['ngAnimate'])

        </code>
        
  section
    p As we saw in the documentation for $animate, we can apply animations to our elements by defining CSS classes that that tell the browser how to animate an element.
    
  section
    p The $animate service automatically adds and removes these classes for us at the right time. 
    
  section
    p An example set of CSS animations for ngShow are shown below
    br
    pre.
      <code class="css" data-trim>
      .ng-hide-add, .ng-hide-remove {
        transition: all linear 1.0s;
        display: block !important;
      }

      .ng-hide-add.ng-hide-add-active,
      .ng-hide-remove {
        opacity: 0;
      }

      .ng-hide-add,
      .ng-hide-remove.ng-hide-remove-active {
        opacity: 1;
      }
      
      </code>
    
    p Which elements are these animations going to be applied to?
    
  section
    p All elements that use the ngShow directive.
    p This is because these class names are used for all the ngShow elements.
    
  section
    p We can scope these animations by making the class definitions more descriptive. 
    br
    pre.
      <code class="css" data-trim>
      .my-class.ng-hide-add, .my-class.ng-hide-remove {
        transition: all linear 1.0s;
        display: block !important;
      }

      .my-class.ng-hide-add.ng-hide-add-active,
      .my-class.ng-hide-remove {
        opacity: 0;
      }

      .my-class.ng-hide-add,
      .my-class.ng-hide-remove.ng-hide-remove-active {
        opacity: 1;
      }
      
      </code> 
    
    p Notice here that these animations will only be applied to elements that have the CSS class "my-class". 

  section(id="example1", ng-controller="Lecture10Controller")
    button(ng-click="sayHello = !sayHello") Say Hello
    p.example-1(ng-show="sayHello") Hello World!

  section
    p If we add the animation classes for ng-repeat, we can animate lists as they change.
    br
    pre.
      <code class="css" data-trim>
      .repeated-item.ng-move,
      .repeated-item.ng-enter,
      .repeated-item.ng-leave {
        -webkit-transition: all linear 1.0s;
        transition: all linear 1.0s;
      }
       
      .repeated-item.ng-leave.ng-leave-active,
      .repeated-item.ng-move,
      .repeated-item.ng-enter {
        opacity: 0;
        max-height: 0;
      }
       
      .repeated-item.ng-leave,
      .repeated-item.ng-move.ng-move-active,
      .repeated-item.ng-enter.ng-enter-active {
        opacity: 1;
        max-height: 40px;
      }

      </code>

  section(id="example2", ng-controller="Lecture10Controller")
    button(ng-click="pushTime()") Push Time
    button(ng-click="popTime()") Pop Time
    br
    br
    div.repeated-item(ng-repeat="time in times") {{time | date:'h:mm:ss.sss a'}}

  section
    h1 Lab Ten
    h2 Animations

  section
    p In this lab, you're going to add animations to the employee, timesheet, and project lists.

  script.
    angular.module('lecture10', ['ngAnimate']).controller('Lecture10Controller', function($scope) {
      $scope.times = [];

      $scope.pushTime = function() {
        $scope.times.push(new Date());
      };

      $scope.popTime = function() {
        $scope.times.shift();
      };


      $scope.sayHello = false;
    });

    angular.bootstrap(document.getElementById("example1"), ["lecture10"]);
    angular.bootstrap(document.getElementById("example2"), ["lecture10"]);
